#!/bin/bash -e

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

BASE_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
cd $BASE_DIR >/dev/null
SCRIPT_FILE=$(basename ${BASH_SOURCE[0]})
LOG_FILE={{ pepyatka_deploy_log_dir }}/check-deploy.log

{% if slack_token is defined %}
export SLACK_TOKEN='{{ slack_token }}'
export SLACK_USERNAME=Ansible
export SLACK_CHANNEL='#deerployment'
{% endif %}
export ANSIBLE_LOG_PATH=$LOG_FILE

echo >> $LOG_FILE
echo "=== $SCRIPT_FILE is starting at $(date) ===" >> $LOG_FILE

USE_FORCE_LUKE=no
if [[ $# = 1 ]] && [[ $1 = "--force" ]]; then
    echo "Using force" >> $LOG_FILE
    USE_FORCE_LUKE=yes
fi

# $1 = repo, $2 = branch
check_repo() {
    pushd $1 >/dev/null
    git fetch origin &>> $LOG_FILE
    LOCAL=$(git rev-parse $2)
    REMOTE=$(git rev-parse origin/$2)
    if [ $LOCAL != $REMOTE ]; then
        echo "$1 is outdated, git pull and re-deploy" >> $LOG_FILE
        git reset --hard origin/$2 &>> $LOG_FILE
        STATUS=updated
    else
        echo "$1 is up-to-date" >> $LOG_FILE
        STATUS=fresh
    fi
    popd >/dev/null
    echo $STATUS
}

SERVER_STATUS=$(check_repo pepyatka-server {{ pepyatka_server_branch }})
{% if vanilla_enabled %}
VANILLA_STATUS=$(check_repo vanilla {{ vanilla_branch }})
{% else %}
VANILLA_STATUS=
{% endif %}
{% if react_client_enabled %}
REACT_STATUS=$(check_repo react-client {{ react_client_branch }})
{% else %}
REACT_STATUS=
{% endif %}
ANSIBLE_STATUS=$(check_repo pepyatka-ansible {{ pepyatka_ansible_branch }})

if [ "${SERVER_STATUS}" = updated ] || [ "${VANILLA_STATUS}" = updated ] || [ "${REACT_STATUS}" = updated ] || [ "${ANSIBLE_STATUS}" = updated ] || [ "${USE_FORCE_LUKE}" = yes ]; then
    cd pepyatka-ansible >/dev/null
{% if vault_password_file is defined %}
    ansible-playbook -i {{ pepyatka_deploy_inventory }} playbooks/site.yml -l {{ pepyatka_hostname }} --connection=local --vault-password-file=/root/pepyatka.vault
{% else %}
    ansible-playbook -i {{ pepyatka_deploy_inventory }} playbooks/site.yml -l {{ pepyatka_hostname }} --connection=local
{% endif %}
    echo "=== done at $(date) ===" >> $LOG_FILE
fi
