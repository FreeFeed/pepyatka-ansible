#!/bin/bash

set -eE

PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
LOGTAG="freefeed-db-backup"
DB_NAME="{{postgres_dbname | string}}"
BACKUP_BUCKET="{{ backup_s3_bucket }}"
TIMESTAMP="$(date --utc +%Y-%m-%d-%H%M%S)"
BACKUPFILE="${DB_NAME}-${TIMESTAMP}.dump"
today="$(date +%a)"
weekly='Sun'
[ "${today}" = "${weekly}" ] && PREFIX="weekly" || PREFIX="daily"

failure() {
    curl -m 10 --retry 5 https://hc-ping.com/{{ healthchecks_io['freefeed-db-backup'] }}/fail
}

trap failure ERR

SCRIPT_START=$(date +%s)
logger -t "${LOGTAG}" "Starting"
cd /var/lib/postgresql
logger -t "${LOGTAG}" "Removing old backup files, if any"
rm -f *.dump
logger -t "${LOGTAG}" "Running pg_dump to ${BACKUPFILE}"
pg_dump -Fc ${DB_NAME} > ${BACKUPFILE}
logger -t "${LOGTAG}" "Uploading ${BACKUPFILE} to s3://${BACKUP_BUCKET}/db/${PREFIX}/"
aws s3 cp "${BACKUPFILE}" "s3://${BACKUP_BUCKET}/db/${PREFIX}/"
rm -f "${BACKUPFILE}"
curl -m 10 --retry 5 https://hc-ping.com/{{ healthchecks_io['freefeed-db-backup'] }}
SCRIPT_END=$(date +%s)
logger -t "${LOGTAG}" "Completed in $((SCRIPT_END-SCRIPT_START)) seconds"
exit 0
