---

- name: Install nginx
  become: yes
  ansible.builtin.package:
    name: nginx
    state: present

- name: Ensure /etc/nginx/conf.d
  become: yes
  ansible.builtin.file:
    path: /etc/nginx/conf.d
    state: directory
  tags:
    - config

- name: Start imgproxy container
  become: yes
  when: use_imgproxy
  community.docker.docker_container:
    name: "imgproxy-{{ freefeed_env }}"
    image: "darthsim/imgproxy:v3"
    state: started
    restart_policy: on-failure
    ports:
      - "{{ imgproxy_port }}:8080"
    env:
      IMGPROXY_USE_ETAG: 'true'
      IMGPROXY_MAX_SRC_RESOLUTION: '50'
      IMGPROXY_JPEG_PROGRESSIVE: 'true'
      IMGPROXY_DATADOG_ENABLE: 'true'
      DD_AGENT_HOST: '172.18.0.1'
      DD_ENV: "{{ freefeed_env }}"
    healthcheck:
      test: [ "CMD", "imgproxy", "health" ]
      timeout: 10s
      interval: 10s
      retries: 3

- name: Render ssl.conf
  become: yes
  ansible.builtin.template:
    src: ssl.conf.j2
    dest: /etc/nginx/ssl.conf
  tags:
    - config
  notify: Reload nginx

- name: Render nginx.conf
  become: yes
  ansible.builtin.template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
  tags:
    - config
  notify: Reload nginx

- name: Render /etc/nginx/conf.d/{{ freefeed_hostname }}.conf
  become: yes
  ansible.builtin.template:
    src: site.conf.j2
    dest: "/etc/nginx/conf.d/{{ freefeed_hostname }}.conf"
  tags:
    - config
  notify: Reload nginx

- name: Render /etc/nginx/conf.d/{{ freefeed_media_hostname }}.conf
  become: yes
  ansible.builtin.template:
    src: media.conf.j2
    dest: "/etc/nginx/conf.d/{{ freefeed_media_hostname }}.conf"
  tags:
    - config
  notify: Reload nginx
