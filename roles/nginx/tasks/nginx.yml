---
# file: nginx/tasks/main.yml

- name: Generate pepyatka ports array
  debug:
  with_sequence: start="{{ pepyatka_base_port }}" end="{{ pepyatka_base_port + (ansible_processor_cores | int) - 1 }}"
  register: pepyatka_ports
  when: pepyatka_server_instances is not defined
  tags:
    - nginx-config

- set_fact:
    pepyatka_server_instances: "{{ pepyatka_ports.results | map(attribute='item') | list }}"
  when: pepyatka_server_instances is not defined
  tags:
    - nginx-config

- name: Install nginx
  become: yes
  apt: name=nginx state=present update_cache=yes force=yes default_release=jessie-backports

- name: Deploy custom logrotate config for nginx
  become: yes
  copy: src=logrotate_d_nginx dest=/etc/logrotate.d/nginx

- name: Ensure /etc/nginx/ssl
  become: yes
  file: path=/etc/nginx/ssl state=directory

- name: Ensure nginx has access to pepyatka files
  become: yes
  file:
    path: "{{ pepyatka_files_dir }}"
    group: "{{ www_group }}"
    state: directory
    recurse: yes
    mode: 0775

- name: Deploy nginx config
  become: yes
  template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf
  tags:
    - nginx-config

- name: Deploy nginx common config
  become: yes
  template: src=pepyatka-common.conf.j2 dest=/etc/nginx/pepyatka-common.conf
  tags:
    - nginx-config

- name: Start and enable nginx
  become: yes
  service: name=nginx state=started enabled=yes

- name: Reload nginx config
  become: yes
  command: systemctl reload nginx
  tags:
    - nginx-config

- name: Ensure nginx is up and running
  become: yes
  wait_for: host=localhost port="{{ server_cert is defined | ternary(443, 80) }}" timeout=30 state=started

