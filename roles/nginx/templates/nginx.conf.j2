user  {{ www_user }};
worker_processes  {{ ansible_processor_vcpus }};

error_log  /var/log/nginx/error.log;
#error_log  /var/log/nginx/error.log  notice;
#error_log  /var/log/nginx/error.log  info;
pid        /run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    client_max_body_size {{ nginx_client_max_body_size }};

    real_ip_header X-Forwarded-For;
    set_real_ip_from {{ nginx_load_balancer_source }};

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      '$request_time $upstream_response_time $pipe';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    index   index.html index.htm;

    upstream app_pepyatka {
      ip_hash;
{% for port in pepyatka_server_instances %}
      server {{ pepyatka_server_host }}:{{ port }};
{% endfor %}
    }

    server {
      listen 81;
      server_name localhost;

      access_log off;
      allow 127.0.0.1;
      allow {{ nginx_load_balancer_source }};
      deny all;

      location /nginx_status {
        stub_status on;
      }
    }

{% if pepyatka_s3_bucket != "" %}
   server {
     server_name {{ pepyatka_media_hostname }};
     location = / {
       return {{ pepyatka_frontend_scheme }}://{{ react_client_hostname }}/;
     }
     location / {
       access_log off;
       log_not_found off;
       expires max;
       if ($request_method !~ ^(GET|HEAD)$ ) {
         return 405;
       }
       add_header Access-Control-Allow-Origin '*' always;
       add_header Access-Control-Allow-Methods 'GET,HEAD' always;
       resolver 169.254.169.253 valid=30s;
       proxy_pass https://{{ pepyatka_s3_bucket }}.s3.amazonaws.com;
     }
   }
{% endif %}

   server {
     listen 80;
     server_name {{ react_client_hostname }};
     access_log /var/log/nginx/{{ react_client_hostname }}.log main;
     include pepyatka-common.conf;

     # Used for opengraph-data export
     ssi on;

     root {{ react_client_dir }}/_dist;

     # Expire rules for static content

     # document html and data
     location ~* \.(?:html?|xml|json)$ {
       expires off;
       access_log off;
       # access_log logs/static.log; # if you want
       try_files $uri $uri/ /index.html?/$request_uri;
     }

     # CSS and Javascript
     location ~* \.(?:css|js)$ {
       expires 1y;
       access_log off;
       add_header Cache-Control "public";
       try_files $uri $uri/ /index.html?/$request_uri;
     }

     location / {
       access_log off;
       try_files $uri $uri/ /index.html?/$request_uri;
{% if react_client_basic_auth_enabled %}
       auth_basic "Restricted Content";
       auth_basic_user_file /etc/nginx/.htpasswd;
{% endif %}
     }

     location ~ ^/assets/ {
       access_log off;
       expires max;
       try_files $uri =404;
     }
   }
{% if vanilla_enabled %}
   server {
     listen 80;
     server_name {{ vanilla_hostname }};
     access_log /var/log/nginx/{{ vanilla_hostname }}.log main;
     include pepyatka-common.conf;

     location / {
       root {{ vanilla_dir }};
       rewrite ^/s/(.*)$ /$1 break;
       rewrite ^.* /index.htm break;
     }
   }
{% endif %}
}
