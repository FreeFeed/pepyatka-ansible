---

- name: Install required packages
  apt: name={{ item }} state=present force=yes
  with_items:
    - graphicsmagick
    - git
    - make
    - g++
  tags: pepyatka

- name: Create pepyatka user
  user:
    name: "{{ pepyatka_user }}"
    home: "{{ pepyatka_home_dir }}"
    createhome: yes
    system: yes
  tags: pepyatka

- name: Deploy pepyatka-server
  become: yes
  become_user: "{{ pepyatka_user }}"
  git:
    repo: "{{ pepyatka_server_repo }}"
    update: yes
    dest: "{{ pepyatka_home_dir }}/pepyatka-server"
    version: "{{ pepyatka_server_branch }}"
    force: yes
  register: pepyatka_server
  tags: pepyatka

- name: Save changelog in a file
  shell: echo "{{ pepyatka_server.before }}...{{ pepyatka_server.after }}" > /tmp/pepyatka-server-changelog
  when: pepyatka_server.before != pepyatka_server.after
  tags: pepyatka

- name: Fetch pepyatka-server changelog
  fetch:
    src=/tmp/pepyatka-server-changelog
    dest=pepyatka-server-changelog/{{ inventory_hostname }}
    flat=yes
  when: pepyatka_server.before != pepyatka_server.after
  tags: pepyatka

- name: Deploy pepaytka config
  template:
    src: environment.js.j2
    dest: "{{ pepyatka_home_dir }}/pepyatka-server/config/environments/{{ pepyatka_node_env }}.js"
    owner: "{{ pepyatka_user }}"
    group: "{{ pepyatka_group }}"
  register: pepyatka_config
  tags: pepyatka

- name: Deploy reset password mail template
  template:
    src: resetPassword.ejs.j2
    dest: "{{ pepyatka_home_dir }}/pepyatka-server/app/scripts/views/mailer/resetPassword.ejs"
    owner: "{{ pepyatka_user }}"
    group: "{{ pepyatka_group }}"
  tags: pepyatka

- name: Deploy banlist.txt
  copy:
    content: "{{ pepyatka_banlist }}"
    dest: "{{ pepyatka_home_dir }}/pepyatka-server/config/banlist.txt"
    owner: "{{ pepyatka_user }}"
    group: "{{ pepyatka_group }}"
  register: pepyatka_banlist
  tags: pepyatka

- name: Deploy knex config
  template:
    src: knexfile.js.j2
    dest: "{{ pepyatka_home_dir }}/pepyatka-server/knexfile.js"
    owner: "{{ pepyatka_user }}"
    group: "{{ pepyatka_group }}"
  tags:
    - pepyatka
    - knex-config

- name: Create directories for attachments, thumbnails and profile pictures
  file:
    path: "{{ pepyatka_files_dir }}/{{ item }}"
    state: directory
    owner: "{{ pepyatka_user }}"
  with_items:
    - attachments/thumbnails
    - profilepics
  tags:
    - pepyatka

- name: Cleanup local node_modules
  file: path="{{ pepyatka_home_dir }}/pepyatka-server/node_modules" state=absent
  when: pepyatka_server.before != pepyatka_server.after
  tags: pepyatka

- name: Install pepyatka-server dependencies
  npm: path="{{ pepyatka_home_dir }}/pepyatka-server" state=latest
  tags: pepyatka

- name: Deploy pepyatka@.service
  template: src=pepyatka@.service.j2 dest=/lib/systemd/system/pepyatka@.service
  register: systemd_service
  tags: pepyatka

- name: Deploy pepyatka.target
  copy: src=pepyatka.target dest=/lib/systemd/system/
  tags: pepyatka

- name: Deploy logrotate config for pepyatka instances
  template: src=logrotate.j2 dest=/etc/logrotate.d/pepyatka
  tags: pepyatka

- name: Run systemctl daemon-reload
  command: systemctl daemon-reload
  tags: pepyatka

- name: Start pepyatka-server instances
  service: name="pepyatka@{{ item }}.service" state=started enabled=yes
  with_items: "{{ pepyatka_server_instances }}"
  register: started_pepyatka
  tags: pepyatka

- name: Restart pepyatka-server instances
  service: name="pepyatka@{{ item }}.service" state=restarted
  with_items: "{{ pepyatka_server_instances }}"
  when: pepyatka_server is defined and (pepyatka_server.before != pepyatka_server.after)
  tags: pepyatka

- name: Ensure pepyatka is up and running
  wait_for: host=localhost port="{{ item }}" timeout=30 state=started
  with_items: "{{ pepyatka_server_instances }}"
  tags: pepyatka
