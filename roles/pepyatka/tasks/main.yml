---

- name: Generate pepyatka ports array
  debug:
  with_sequence: start="{{ pepyatka_base_port }}" end="{{ pepyatka_base_port + (ansible_processor_cores | int) - 1 }}"
  register: pepyatka_ports
  when: pepyatka_server_instances is not defined

- set_fact:
    pepyatka_server_instances: "{{ pepyatka_ports.results | map(attribute='item') | list }}"
  when: pepyatka_server_instances is not defined

- name: Install required packages
  apt: name="{{ item }}" state=present force=yes
  with_items:
    - graphicsmagick
    - git
    - make
    - g++
  tags: pepyatka

- name: Create pepyatka user
  user:
    name: "{{ pepyatka_user }}"
    home: "{{ pepyatka_home_dir }}"
    createhome: yes
    system: yes
  tags: pepyatka

- name: Deploy pepyatka-server
  become: yes
  become_user: "{{ pepyatka_user }}"
  git:
    repo: "{{ pepyatka_server_repo }}"
    update: yes
    dest: "{{ pepyatka_home_dir }}/pepyatka-server"
    version: "{{ pepyatka_server_branch }}"
    force: yes
  register: pepyatka_server
  tags: pepyatka

- name: Save changelog in a file
  shell: echo "{{ pepyatka_server.before }}...{{ pepyatka_server.after }}" > /tmp/pepyatka-server-changelog
  when: pepyatka_server.before != pepyatka_server.after
  tags: pepyatka

- name: Fetch pepyatka-server changelog
  fetch:
    src=/tmp/pepyatka-server-changelog
    dest=pepyatka-server-changelog/{{ inventory_hostname }}
    flat=yes
  when: pepyatka_server.before != pepyatka_server.after
  tags: pepyatka

- name: Deploy pepaytka config
  become: yes
  become_user: "{{ pepyatka_user }}"
  template:
    src: environment.js.j2
    dest: "{{ pepyatka_home_dir }}/pepyatka-server/config/environments/{{ pepyatka_node_env }}.js"
    owner: "{{ pepyatka_user }}"
    group: "{{ pepyatka_group }}"
  register: pepyatka_config
  tags: pepyatka

- name: Deploy reset password mail template
  become: yes
  become_user: "{{ pepyatka_user }}"
  template:
    src: resetPassword.ejs.j2
    dest: "{{ pepyatka_home_dir }}/pepyatka-server/app/scripts/views/mailer/resetPassword.ejs"
    owner: "{{ pepyatka_user }}"
    group: "{{ pepyatka_group }}"
  tags: pepyatka

- name: Deploy banlist.txt
  become: yes
  become_user: "{{ pepyatka_user }}"
  copy:
    content: "{{ pepyatka_banlist }}"
    dest: "{{ pepyatka_home_dir }}/pepyatka-server/config/banlist.txt"
    owner: "{{ pepyatka_user }}"
    group: "{{ pepyatka_group }}"
  register: pepyatka_banlist
  tags: pepyatka

- name: Deploy knex config
  become: yes
  become_user: "{{ pepyatka_user }}"
  template:
    src: knexfile.js.j2
    dest: "{{ pepyatka_home_dir }}/pepyatka-server/knexfile.js"
    owner: "{{ pepyatka_user }}"
    group: "{{ pepyatka_group }}"
  tags:
    - pepyatka
    - knex-config

- name: Create directories for attachments, thumbnails and profile pictures
  file:
    path: "{{ pepyatka_files_dir }}/{{ item }}"
    state: directory
    owner: "{{ pepyatka_user }}"
  with_items:
    - attachments/thumbnails
    - attachments/thumbnails2
    - profilepics
  when: pepyatka_storage_type == 'fs'
  tags:
    - pepyatka

- name: Cleanup local node_modules
  file: path="{{ pepyatka_home_dir }}/pepyatka-server/node_modules" state=absent
  when: pepyatka_server.before != pepyatka_server.after
  tags: pepyatka

- name: Install fresh YARN
  command: npm install -g yarn

- name: Install dependencies
  become: yes
  become_user: "{{ pepyatka_user }}"
  command: yarn install
  args:
    chdir: "{{ pepyatka_home_dir }}/pepyatka-server"

- name: Deploy pepyatka@.service
  template: src=pepyatka@.service.j2 dest=/lib/systemd/system/pepyatka@.service
  register: systemd_service
  tags: pepyatka

- name: Deploy pepyatka.target
  copy: src=pepyatka.target dest=/lib/systemd/system/
  tags: pepyatka

- name: Deploy logrotate config for pepyatka instances
  template: src=logrotate.j2 dest=/etc/logrotate.d/pepyatka
  tags: pepyatka

- name: Deploy newrelic.js
  become: yes
  become_user: "{{ pepyatka_user }}"
  template: src=newrelic.js.j2 dest="{{ pepyatka_home_dir }}/pepyatka-server/newrelic.js"
  when: new_relic_license_key is defined and new_relic_app_name is defined
  tags:
    - pepyatka
    - newrelic

- name: Run systemctl daemon-reload
  command: systemctl daemon-reload
  tags: pepyatka

- name: Start pepyatka-server instances
  service: name="pepyatka@{{ item }}.service" state=started enabled=yes
  with_items: "{{ pepyatka_server_instances }}"
  register: started_pepyatka
  tags: pepyatka

- name: Enable pepyatka.target
  service: name=pepyatka.target enabled=yes
  tags: pepyatka

- name: Restart pepyatka-server instances
  service: name="pepyatka@{{ item }}.service" state=restarted
  with_items: "{{ pepyatka_server_instances }}"
  when: pepyatka_server is defined and (pepyatka_server.before != pepyatka_server.after)
  tags: pepyatka

- name: Ensure pepyatka is up and running
  wait_for: host=localhost port="{{ item }}" timeout=30 state=started
  with_items: "{{ pepyatka_server_instances }}"
  tags: pepyatka

- name: Setup cron job for daily stats
  cron:
    name="Pepyatka daily stats"
    cron_file=pepyatka-daily-stats
    job="cd {{ pepyatka_home_dir }}/pepyatka-server && test -f bin/count-daily-stats.js && NODE_ENV={{ pepyatka_node_env }} node_modules/.bin/babel-node bin/count-daily-stats.js || true"
    user="{{ pepyatka_user }}"
    minute=5
    hour=0
    state=present
  tags:
    - pepyatka
    - pepyatka-daily-stats

- name: Setup db maintenance cron job
  cron:
    name="Pepyatka db daily maintenance"
    cron_file=pepyatka-db-maintenance
    job="cd {{ pepyatka_home_dir }}/pepyatka-server && test -f bin/db_maintenance.js && NODE_ENV={{ pepyatka_node_env }} node_modules/.bin/babel-node bin/db_maintenance.js || true"
    user="{{ pepyatka_user }}"
    minute=15
    hour=0
    state=present
  tags:
    - pepyatka
    - pepyatka-daily-stats

- name: Setup cron job for notification emails
  cron:
    name="FreeFeed notification emails"
    cron_file=freefeed-notification-emails
    job="cd {{ pepyatka_home_dir }}/pepyatka-server && test -f bin/notification_emails.js && NODE_ENV={{ pepyatka_node_env }} node_modules/.bin/babel-node bin/notification_emails.js || true"
    user="{{ pepyatka_user }}"
    hour=19
    minute=45
    state=present
  tags:
    - pepyatka
    - pepyatka-notification-emails

- name: Setup cron job for bestof emails
  cron:
    name="FreeFeed bestof emails"
    cron_file=freefeed-bestof-emails
    job="cd {{ pepyatka_home_dir }}/pepyatka-server && test -f bin/bestof_emails.js && NODE_ENV={{ pepyatka_node_env }} node_modules/.bin/babel-node bin/bestof_emails.js || true"
    user="{{ pepyatka_user }}"
    hour=04
    minute=40
    state=present
  tags:
    - pepyatka
    - pepyatka-bestof-emails

