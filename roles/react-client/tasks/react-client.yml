---

- name: Ensure git is installed
  apt: name=git state=present

- name: Deploy react-client
  git:
    repo: "{{ react_client_repo }}"
    update: yes
    dest: "{{ react_client_dir }}"
    version: "{{ react_client_branch }}"
    force: yes
  register: react_client

- name: Save changelog in a file
  shell: echo "{{ react_client.before }}...{{ react_client.after }}" > /tmp/react-client-changelog
  when: react_client.before != react_client.after

- name: Fetch react-client changelog
  fetch:
    src=/tmp/react-client-changelog
    dest="react-client-changelog/{{ inventory_hostname }}"
    flat=yes
  when: react_client.before != react_client.after

- name: Update service name in index.jade
  replace:
    dest: "{{ react_client_dir }}/index.jade"
    regexp: "Reactive Pepyatka"
    replace: "{{ pepyatka_service_name }}"

- name: Update api.host in src/config.js
  replace:
    dest: "{{ react_client_dir }}/src/config.js"
    regexp: "host:.*"
    replace: "host: '{{ pepyatka_frontend_scheme }}://{{ react_client_hostname }}',"

- name: Update cookie domain in src/config.js
  replace:
    dest: "{{ react_client_dir }}/src/config.js"
    regexp: "cookieDomain.*"
    replace: "cookieDomain: '{{ auth_cookie_domain }}',"

- name: Update tokenPrefix in src/config.js
  replace:
    dest: "{{ react_client_dir }}/src/config.js"
    regexp: "tokenPrefix:.*"
    replace: "tokenPrefix: '{{ auth_token_prefix }}',"

- name: Update whoAmI cache key in src/config.js
  replace:
    dest: "{{ react_client_dir }}/src/config.js"
    regexp: "userStorageKey.*"
    replace: "userStorageKey: '{{ local_storage_whoami_cache_key }}',"

- name: Update captcha.siteKey in src/config.js
  replace:
    dest: "{{ react_client_dir }}/src/config.js"
    regexp: "siteKey.*"
    replace: "siteKey: '{{ recaptcha_sitekey }}',"

- name: Update Sentry DSN in src/config.js
  replace:
    dest: "{{ react_client_dir }}/src/config.js"
    regexp: "publicDSN.*"
    replace: "publicDSN: '{{ sentry_dsn }}',"

- name: Kill local node_modules
  file: path="{{ react_client_dir }}/node_modules" state=absent
  when: react_client.before != react_client.after

- name: Install dependencies
  npm: path="{{ react_client_dir }}" state=latest

- name: Update server url in bookmarklet*.js
  replace:
    dest: "{{ react_client_dir }}/assets/js/{{ item }}"
    regexp: "http://localhost:3333"
    replace: "{{ pepyatka_frontend_scheme }}://{{ pepyatka_hostname }}"
  with_items:
    - bookmarklet.js
    - bookmarklet.min.js
  tags:
    - pepyatka
    - nginx

- name: Replace host in bookmarklet-popup.js
  replace:
    dest: "{{ react_client_dir }}/assets/js/bookmarklet-popup.js"
    regexp: "\\+ host \\+"
    replace: "+ '{{ pepyatka_frontend_scheme }}://{{ pepyatka_hostname }}' +"

- name: Read bookmarklet.min.js
  shell: cat "{{ react_client_dir }}/assets/js/bookmarklet.min.js"
  register: bookmarklet_min_js_content
  changed_when: false

- name: Populate BOOKMARKLET_PLACEHOLDER
  replace:
    dest: "{{ react_client_dir }}/src/components/sidebar.jsx"
    regexp: "BOOKMARKLET_PLACEHOLDER"
    replace: "{{ bookmarklet_min_js_content.stdout }}"

- name: Build assets
  command: make prod out_dir="{{ react_client_dir }}/public"
  args:
    chdir: "{{ react_client_dir }}"

- name: Ensure "{{ react_client_dir }}/public/js"
  file: path="{{ react_client_dir }}/public/js" state=directory

- name: Copy bookmarklet-popup.js to the legacy location
  command: cp "{{ react_client_dir }}/public/assets/js/bookmarklet-popup.js" "{{ react_client_dir }}/public/js/"

- name: Fix permissions
  file:
    path: "{{ react_client_dir }}"
    owner: "{{ www_user }}"
    group: "{{ www_group }}"
    state: directory
    recurse: yes

